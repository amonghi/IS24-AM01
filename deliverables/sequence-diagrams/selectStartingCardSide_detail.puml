@startuml

!startsub PARTS
!include events.puml

!procedure $selectSide_req($client, $server=Server)
    $client -> $server: selectSide(side)
!endprocedure

!procedure $selectSide_res_OK($client, $server=Server)
    $client <-- $server: OK
!endprocedure

!procedure $selectSide_res_KO_sideAlreadyChosen($client, $server=Server)
    $client <-- $server: KO, sideAlreadyChosen()
!endprocedure

!procedure $selectSide_res_KO_invalidChoice($client, $server=Server)
    $client <-- $server: KO, invalidSide()
!endprocedure

!procedure $selectSide_seq($client, $inGame="", $server=Server)
    $selectSide_req($client)
    $selectSide_res_OK($client)

    !foreach $other in %splitstr($inGame, "~")
        $event_updateChosenSideList($other)
    !endfor
!endprocedure

!endsub

title Select starting card side
participant Alice
participant Server
participant Bob

hnote over Alice : IN_GAME
/ hnote over Bob : IN_GAME

$event_updateGameStatus(SETUP_STARTING_CARD_SIDE, NULL, Alice)
$event_setStartingCard(Alice)
$event_updateGameStatus(SETUP_STARTING_CARD_SIDE, NULL, Bob)
$event_setStartingCard(Bob)

|||

$selectSide_req(Alice)
alt
    $selectSide_res_OK(Alice)
    $event_updateChosenSideList(Alice)
    $event_updateChosenSideList(Bob)

    'TODO: at this point the PlayArea is created, we should notify the client

    opt all players have selected a side
        event_seq_newStatus_SETUP_COLOR("Alice~Bob")
    end
else this player has already chosen the starting card side
    $selectSide_res_KO_sideAlreadyChosen(Alice)
else the selected side is not a valid option
    $selectSide_res_KO_invalidChoice(Alice)
end

@enduml
