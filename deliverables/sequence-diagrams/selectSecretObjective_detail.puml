@startuml

!startsub PARTS
!include events.puml

!procedure $selectObjective_req($client, $server=Server)
    $client -> $server: selectObjective(objective)
!endprocedure

!procedure $selectObjective_res_OK($client, $server=Server)
    $client <-- $server: OK
!endprocedure

!procedure $selectObjective_seq($client, $inGame="", $server=Server)
    $selectObjective_req($client)
    $selectObjective_res_OK($client)

    !foreach $other in %splitstr($inGame, "~")
        $event_updateChosenObjectiveList($other)
    !endfor
!endprocedure

!endsub

title Select secret objective
participant Alice
participant Server
participant Bob

hnote over Alice : IN_GAME
/ hnote over Bob : IN_GAME

$event_updateGameStatus(SETUP_OBJECTIVE, Alice)
$event_setSecretObjectives(Alice)
$event_updateGameStatus(SETUP_OBJECTIVE, Bob)
$event_setSecretObjectives(Bob)

|||

$selectObjective_req(Alice)
alt 
    $selectObjective_res_OK(Alice)
    $event_updateChosenObjectiveList(Alice)
    $event_updateChosenObjectiveList(Bob)
    opt all players have selected secret objective
        $event_seq_newStatus(PLAY, "Alice~Bob")
        $event_seq_newTurn_PLACING($inGame="Alice~Bob")

        $event_seq_setCommonObjectives($inGame="Alice~Bob")
        $event_seq_setCardsInHand($inGame="Alice~Bob")
        $event_seq_setFaceUpCards($inGame="Alice~Bob")
    end

else player has already chosen
    Alice <-- Server: KO, doubleChoice()
else invalid objective
    Alice <-- Server: KO, invalidObjective()
end

@enduml
