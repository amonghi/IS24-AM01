@startuml
' for all pages
!include events.puml

!procedure notifyStatusAll($status, $clients)
    $event_seq_newStatus($status, $clients)
!endprocedure

!procedure notifyTurnAll($turnPhase, $clients)
    $event_seq_newTurn($turnPhase, $clients)
!endprocedure

!function $const($string)
    !return "<font:monospace><b>" + $string + "</b></font>"
!endfunction


'first page
!includesub auth_detail.puml!PARTS

participant Alice
participant Bob
participant Carlos
participant Server

title User authentication
hnote over Alice : NOT_AUTHENTICATED
/ hnote over Bob : NOT_AUTHENTICATED
/ hnote over Carlos : NOT_AUTHENTICATED

$auth_seq_OK(Alice)
||25||
$auth_seq_OK(Bob)
||25||
$auth_seq_OK(Carlos)

newpage Create game and join
!includesub createGame_detail.puml!PARTS
!includesub joinGame_detail.puml!PARTS

$createGame_seq_OK(Alice, "Bob~Carlos")
||25||
$joinGame_seq_OK(Bob, "Carlos", "Alice~Bob")
||25||
$joinGame_seq_OK(Carlos, "", "Alice~Bob~Carlos")

newpage Game setup
!includesub selectStartingCardSide_detail.puml!PARTS
!includesub selectPlayerColor_detail.puml!PARTS
!includesub selectSecretObjective_detail.puml!PARTS

||75||

$event_seq_newStatus_SETUP_STARTING_CARD_SIDE("Alice~Bob~Carlos")

||25||
$selectSide_seq("Alice", "Alice~Bob~Carlos")
||25||
$selectSide_seq("Bob", "Alice~Bob~Carlos")
||25||
$selectSide_seq("Carlos", "Alice~Bob~Carlos")

||75||

event_seq_newStatus_SETUP_COLOR("Alice~Bob~Carlos")

||75||

$selectColor_seq(Alice, "Alice~Bob~Carlos")
||25||
$selectColor_seq(Bob, "Alice~Bob~Carlos")
||25||
$selectColor_seq(Carlos, "Alice~Bob~Carlos")

||75||

event_seq_newStatus_SETUP_OBJECTIVE("Alice~Bob~Carlos")

||75||

$selectObjective_seq(Alice, "Alice~Bob~Carlos")
||25||
$selectObjective_seq(Bob, "Alice~Bob~Carlos")
||25||
$selectObjective_seq(Carlos, "Alice~Bob~Carlos")

||75||

$event_seq_newStatus(PLAY, "Alice~Bob~Carlos")
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Alice))

$event_seq_setCommonObjectives("Alice~Bob~Carlos")
$event_seq_setCardsInHand("Alice~Bob~Carlos")
$event_seq_updateFaceUpCards("Alice~Bob~Carlos")


newpage First turn
!includesub placeCard_detail.puml!PARTS
!includesub drawCard_detail.puml!PARTS


$placeCard_seq(Alice, "Alice~Bob~Carlos", $const(Alice))
$event_seq_newTurn_DRAWING("Alice~Bob~Carlos", $const(Alice))
||25||
$drawCard_req(Alice)
$drawCard_res_OK(Alice)
$event_seq_updateDecksStatus("Alice~Bob~Carlos")
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Bob))

||50||

$placeCard_seq(Bob, "Alice~Bob~Carlos", $const(Bob))
$event_seq_newTurn_DRAWING("Alice~Bob~Carlos", $const(Bob))
||25||
$drawCard_req(Bob)
$drawCard_res_OK(Bob)
$event_seq_updateDecksStatus("Alice~Bob~Carlos")
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Carlos))

||50||


$placeCard_seq(Carlos, "Alice~Bob~Carlos", $const(Carlos))
$event_seq_newTurn_DRAWING("Alice~Bob~Carlos", $const(Carlos))
||25||
$drawCard_req(Carlos)
$drawCard_res_OK(Carlos)
$event_seq_newStatus(LAST_TURN, "Alice~Bob~Carlos")
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Alice))


newpage Last turn
!includesub gameFinished_detail.puml!PARTS

$placeCard_seq(Alice, "Alice~Bob~Carlos", $const(Alice))
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Bob))
||50||

$placeCard_seq(Bob, "Alice~Bob~Carlos", $const(Bob))
$event_seq_newTurn_PLACING("Alice~Bob~Carlos", $const(Carlos))

||50||

$placeCard_seq(Carlos, "Alice~Bob~Carlos", $const(Carlos))
$event_seq_newStatus(FINISHED, "Alice~Bob~Carlos")

note over Alice,Carlos : Game has finished
$event_seq_updateFinalScores("Alice~Bob~Carlos")

hnote over Alice : AUTHENTICATED
/ hnote over Bob : AUTHENTICATED
/ hnote over Carlos : AUTHENTICATED
@enduml
